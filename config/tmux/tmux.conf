set-window-option -g xterm-keys on
# set -g terminal-overrides "xterm*:kUP5=\e[1;5A,xterm*:kDN5=\e[1;5B,xterm*:kRIT5=\e[1;5C,xterm*:kLFT5=\e[1;5D"
# set -as terminal-overrides ",xterm*:Tc"
# set -ga terminal-overrides ",*-256color:Tc"
# set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
# set -as terminal-overrides ',*:Setulc=\E[59::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'

set -g mouse on
set -g set-clipboard on
set -g status-position bottom
set -g status-interval 2

set -g status-left-length 70
set -g status-right-length 70
set -g renumber-windows on
set -g history-limit 10000
set -g base-index 1
set -g visual-activity on
set -g monitor-activity on
set -g mode-keys vi
set -g allow-passthrough on
set-option -g focus-events on
set-window-option -g alternate-screen on
set -g default-terminal "tmux-256color"
set-option -a terminal-features 'xterm-256color:RGB'
set -g status-interval 30
set -g escape-time 10
set-window-option -g mode-keys vi

set -g status-style 'fg=brightblack,bg=black'
set -g status-left " #[fg=yellow,bg=black] #S#[fg=brightblack,bg=black] "

set -g status-right "#[fg=brightblack,bg=black]#{?pane_synchronized,--SYNCED--,} #(is-online)  #(date '+%I:%M') "
set -ga status-right "|  #(echo #{pane_current_path} | sed 's#$HOME#~#g')"
set -ga status-right "#[fg=red,bg=black]  #(cd #{pane_current_path}; git rev-parse --abbrev-ref HEAD)#[fg=brightblack,bg=black] "

set -g window-status-format '#[fg=brightblack,bg=black] #I:#W '
set -g window-status-current-format '#[fg=white,bg=color18] #I:#W#F '
set -g window-status-activity-style "underscore,fg=brightblack,bg=black"
set -g window-status-separator ""
set -g window-status-style "NONE,fg=brightblack,bg=black"
set -g mode-style bg=brightblack,fg=black
set -g message-style bg=red,fg=white
set -g message-command-style bg=yellow,fg=black
set -g pane-border-style fg=color0
set -g pane-active-border-style fg=color7,bg=color8

unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

unbind r
bind r source-file ~/.config/tmux/tmux.conf \; display "Reloaded tmux config!"

bind-key x kill-pane

bind -r C-k resize-pane -U 5
bind -r C-j resize-pane -D 5
bind -r C-h resize-pane -L 5
bind -r C-l resize-pane -R 5
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1

bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel
bind -T copy-mode    C-c send -X copy-pipe-no-clear "xsel -i --clipboard"
bind -T copy-mode-vi C-c send -X copy-pipe-no-clear "xsel -i --clipboard"

bind s split-window -h -c '#{pane_current_path}'
bind S split-window -v -c '#{pane_current_path}'
unbind '"'
unbind %
bind c new-window -c '#{pane_current_path}'
bind o display-popup -w 90% -h 80% -E "tmux-sessionizer"
bind g new-window -n '' lazygit
bind H new-window -n ' ' 'gh dash'
bind D new-window -n '' lazydocker

# for navigating between panes and neovim.
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

setw -g mode-keys vi
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "pbcopy"
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel "pbcopy"
unbind -T copy-mode-vi Space
bind -T copy-mode-vi Space send -X jump-again
bind-key -T copy-mode-vi 0 send -X back-to-indentation
bind y run 'tmux save-buffer - | pbcopy '
bind C-y run 'tmux save-buffer - | pbcopy '
